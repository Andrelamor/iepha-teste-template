name: Publicação/atualização de dataset em instância CKAN

on:
  push:
    paths:
      - 'dataset/*'
      - 'upload/*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install packages
        run: pip install -r requirements.txt
      - name: Convert CSV
        run: task csv
      - name: Commit CSV
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Converte Excel para CSV via script.
      - name: Create datapackage.yaml
        run: task yaml
      - name: Commit new datapackage.yaml
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Cria datapackage.yaml caso não exista via script.
      - name: Create datapackage.json
        run: task json
      - name: Commit new datapackage.json
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Cria datapackage.json via script.

  validate:
  # this workflow will automate datapackage validation with frictionless
  # for more information see: https://repository.frictionlessdata.io/
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      - name: Validate data
        uses: frictionlessdata/repository@v1
  ckan:
    runs-on: ubuntu-latest
    container:
      image: gabrielbdornas/dtamg:latest
    needs: validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      - id: string
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.actor }}
      - name: Update dataset in CKAN with dpckan
        env:
          CKAN_HOST: ${{ secrets.CKAN_HOST }}
          CKAN_KEY: ${{ secrets[format('CKAN_KEY_{0}', steps.string.outputs.uppercase)] }}
        run: dpckan --datastore --ckan-host "$CKAN_HOST" --ckan-key "$CKAN_KEY" dataset update
