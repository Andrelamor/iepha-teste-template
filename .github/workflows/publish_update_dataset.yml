name: CKAN

on:
  push:
    paths:
      - 'dataset/**'
      - 'upload/**'

jobs:
  publish_update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch Commit Info
        id: commit-info
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          AUTHOR_INFO=$(curl -s https://api.github.com/repos/$GITHUB_REPOSITORY/commits/$COMMIT_SHA)
          echo "$AUTHOR_INFO" >> commit_info.json
      - name: Extract Author Info
        id: extract-author
        run: |
          AUTHOR_NAME=$(jq -r '.commit.author.name' commit_info.json)
          AUTHOR_EMAIL=$(jq -r '.commit.author.email' commit_info.json)
          echo "AUTHOR_NAME=$AUTHOR_NAME" >> $GITHUB_ENV
          echo "AUTHOR_EMAIL=$AUTHOR_EMAIL" >> $GITHUB_ENV
      - name: Install packages
        run: pip install -r requirements.txt
      - name: Convert CSV
        run: task csv
      - name: Commit CSV
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_user_name: ${{ env.AUTHOR_NAME }}
          commit_user_email: ${{ env.AUTHOR_EMAIL }}
          commit_message: Converte Excel para CSV via script.
      - name: Create datapackage.yaml
        env:
          DATASET_NAME: ${{ github.event.repository.name }}
          OWNER_ORG: ${{ secrets.OWNER_ORG }}
        run: task yaml
      - name: Commit new datapackage.yaml
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_user_name: ${{ env.AUTHOR_NAME }}
          commit_user_email: ${{ env.AUTHOR_EMAIL }}
          commit_message: Cria datapackage.yaml caso n√£o exista via script.
      - name: Create datapackage.json
        run: task json
      - name: Commit new datapackage.json
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_user_name: ${{ env.AUTHOR_NAME }}
          commit_user_email: ${{ env.AUTHOR_EMAIL }}
          commit_message: Cria datapackage.json via script.
      - id: string
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.actor }}
      - name: Create dataset in CKAN with not exist
        continue-on-error: true
        env:
          CKAN_HOST: ${{ secrets.CKAN_HOST }}
          CKAN_KEY: ${{ secrets[format('CKAN_KEY_{0}', steps.string.outputs.uppercase)] }}
        run: dpckan --datastore --datapackage dataset/datapackage.json --ckan-host "$CKAN_HOST" --ckan-key "$CKAN_KEY" dataset create
      - name: Update dataset in CKAN with dpckan with exist
        if: ${{ ! cancelled() }}
        env:
          CKAN_HOST: ${{ secrets.CKAN_HOST }}
          CKAN_KEY: ${{ secrets[format('CKAN_KEY_{0}', steps.string.outputs.uppercase)] }}
        run: dpckan --datastore --datapackage dataset/datapackage.json --ckan-host "$CKAN_HOST" --ckan-key "$CKAN_KEY" dataset update
